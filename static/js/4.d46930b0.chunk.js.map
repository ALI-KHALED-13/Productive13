{"version":3,"sources":["media/reminderSFX.mp3","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/subcomponents/NoteCard.js","components/subcomponents/ListCard.js","components/subcomponents/RemindCard.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/subcomponents/ItemForm.js","components/AddingComp.js","components/WorkArea.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","NoteCard","note","notes","updateNotes","handleEdit","ev","changedProp","className","newValue","textContent","trim","map","contentEditable","onBlur","suppressContentEditableWarning","title","content","onClick","parentElement","style","animation","setTimeout","React","memo","ListCard","list","lists","updateLists","listType","slice","search","handleCheck","card","id","item","isChecked","checkedStyle","color","textDecoration","type","checked","onChange","listStyleType","RemindCard","reminder","reminders","updateReminders","playAlert","useState","fired","setFired","timeTillAlert","Date","date","getTime","now","fireAlert","alert","useEffect","timerId","clearTimeout","replace","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ItemForm","forms","reset","setStock","stock","setTitle","setListType","body","setBody","setDate","selected","d","getTimezoneOffset","toISOString","handleChange","name","console","log","onSubmit","preventDefault","categ","split","line","ind","Math","floor","sort","obj1","obj2","maxLength","placeholder","required","autoFocus","min","lastIndexOf","AddingComp","formsShown","setFormShown","text","seText","Fragment","nodeName","toLowerCase","document","querySelector","classList","toggle","backgroundColor","values","includes","WorkArea","data","addEventListener","dataStr","JSON","stringify","localStorage","setItem","alertSFX","getElementById","volume","play","src"],"mappings":"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","file":"static/js/4.d46930b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/reminderSFX.c5d0d3e2.mp3\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\r\n\r\nconst NoteCard =({ note, notes, updateNotes})=>{\r\n\r\n    const handleDelete =(ev)=> {\r\n        ev.target.parentElement.style.animation = 'fadeOutLeft 1s';\r\n        setTimeout(()=> updateNotes( notes.filter(obj=> obj !== note)), 600);\r\n    }\r\n\r\n    const handleEdit =(ev)=> {\r\n        const changedProp = ev.target.className;\r\n        const newValue = ev.target.textContent.trim();\r\n\r\n        updateNotes(notes.map(obj=> obj !== note? obj: {...obj, [changedProp]: newValue}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\" >\r\n            <h2 className='title' contentEditable onBlur={handleEdit} suppressContentEditableWarning >{note.title}</h2>\r\n            <hr/>\r\n            <p contentEditable onBlur={handleEdit} className=\"content\" suppressContentEditableWarning> {note.content} </p>\r\n            <br />\r\n            <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo(NoteCard);","import React from 'react';\r\n\r\nconst ListCard =({ list, lists, updateLists})=>{\r\n    const listType = list.listType.slice( list.listType.search('-') + 1 );\r\n\r\n    const handleDelete =(ev)=> {\r\n        ev.target.parentElement.style.animation = 'fadeOutLeft 1s';\r\n        setTimeout(()=> updateLists(lists.filter(card=> card !== list)), 600);\r\n    }\r\n    \r\n    const handleCheck =(ev)=> {\r\n        updateLists( lists.map(card=> { \r\n                            if(card !== list){ //i.e: the other lists\r\n                                return card //unchanged\r\n                            }\r\n                            const content = card.content.map(obj=> { // representing the single item (line)\r\n                                if (obj.id === ev.target.id){\r\n                                    return {item: obj.item, isChecked: !obj.isChecked, id: obj.id}\r\n                                }else {\r\n                                    return obj\r\n                                }\r\n                            })\r\n                            return {...card, content}\r\n                        }\r\n                    )\r\n                )\r\n    }\r\n\r\n\r\n    const checkedStyle = {color: '#e0e0de', textDecoration: 'line-through'};\r\n\r\n    return (\r\n        <div className=\"listCard\" >\r\n            <h2 className=\"title\" >{list.title}</h2>\r\n            <hr/>\r\n            {\r\n                list.listType === 'unordred'? \r\n                <ul>\r\n                    {\r\n                    list.content.map(obj=> { \r\n                        return <li  key={obj.id} > \r\n                                    <label style={obj.isChecked? checkedStyle: {}}>\r\n                                        <input type='checkbox'\r\n                                        id={obj.id}\r\n                                        checked={obj.isChecked} \r\n                                        onChange={handleCheck} \r\n                                        value={obj.item}\r\n                                        />{obj.item}\r\n                                    </label> \r\n                               </li>\r\n                    })\r\n                    }\r\n                </ul>:\r\n                <ol style={{ listStyleType: listType}} >\r\n                    {list.content.map(obj=> <li key={obj.id}> {obj.item} </li>)}\r\n                </ol>\r\n            }\r\n            <br />\r\n            <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo(ListCard);\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst RemindCard =({reminder, reminders, updateReminders, playAlert})=>{\r\n    const [fired, setFired] = useState(false);\r\n    const timeTillAlert = new Date(reminder.date).getTime() - Date.now();\r\n\r\n    const handleDelete =(ev)=> {\r\n        ev.target.parentElement.style.animation = 'fadeOutLeft 1s';\r\n        setTimeout(()=> updateReminders(reminders.filter(obj=> obj !== reminder)), 600);     \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const timerId = setTimeout(fireAlert, timeTillAlert);\r\n\r\n        if (timeTillAlert <= 0) {\r\n            clearTimeout(timerId);\r\n            if(!fired) setFired(true);\r\n        }\r\n        return ()=> clearTimeout(timerId);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    \r\n    function fireAlert(){\r\n        playAlert();\r\n        setFired(true);\r\n        setTimeout(()=> alert(\"it's time for \" + reminder.title), 500);\r\n    }\r\n\r\n    return (\r\n        <div className={\"reminder\" + (fired? \" passed\":\"\")} >\r\n            <h2 className=\"title\" >{reminder.title}</h2>\r\n            <hr/>\r\n            <p>to be done at {reminder.date.replace(\"T\", \" > \")}</p>\r\n\r\n            <br />\r\n            <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo(RemindCard);\r\n\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\r\n\r\nconst ItemForm =({forms, reset, setStock, stock})=>{\r\n    const [title, setTitle] = useState('');\r\n    const [listType, setListType] = useState('');\r\n    const [body, setBody] = useState(``);\r\n    const [date, setDate] = useState('');\r\n\r\n    let selected = null;\r\n    let d = new Date(Date.now() -  (new Date()).getTimezoneOffset() * 60 * 1000).toISOString(); // will be used very down in the date input/ toIso reset to the TZ to 0\r\n\r\n    for (let key in forms) if (forms[key]) selected = key;\r\n\r\n\r\n    const handleChange =(ev)=>{\r\n        switch(ev.target.name){\r\n            case 'title': setTitle(ev.target.value);\r\n                break;\r\n            case 'listType': setListType(ev.target.value);\r\n                break;\r\n            case 'body': setBody(ev.target.value);\r\n                break;\r\n            case 'date': setDate(ev.target.value);\r\n                break;\r\n            default: console.log('non applicable')\r\n\r\n        }\r\n    }\r\n\r\n    const handleSave =(ev)=>{\r\n        ev.preventDefault();\r\n        const categ = selected;\r\n\r\n        const content = categ !== 'list'? body: body.trim().split('\\n').map((line, ind)=> {return {item:line, isChecked:false, id: categ + (Math.floor(Date.now() / 3000) + ind)}});\r\n\r\n        const obj = {title, listType, content, date ,id: categ + Math.floor(Date.now() / 3000)}\r\n        const arr = [...stock[categ+'s']];\r\n        arr.push(obj)\r\n\r\n        switch(categ){\r\n            case 'note': setStock.updateNotes(arr);\r\n                break;\r\n            case 'list': setStock.updateLists(arr);\r\n                break;\r\n            case 'reminder': \r\n                setStock.updateReminders(arr.sort((obj1, obj2)=> new Date(obj1.date) - new Date(obj2.date))) // to display the sooner to the left);\r\n                break;\r\n            default: console.log('not added')\r\n        }\r\n\r\n        setTitle(''); setListType(''); setBody('');\r\n\r\n        reset({...forms, [selected]:false});\r\n    }\r\n\r\n    return (\r\n        <div className=\"item-form\">\r\n\r\n            <span \r\n                onClick={()=> { setTitle(''); setListType(''); setBody(''); reset({...forms, [selected]:false});}}\r\n                className=\"exit\"\r\n            >\r\n                    X\r\n            </span>\r\n\r\n            <form onSubmit={handleSave}>\r\n\r\n                <input \r\n                name=\"title\"\r\n                maxLength=\"30\" \r\n                placeholder=\"set a title\" \r\n                value={title} \r\n                onChange={handleChange}\r\n                required\r\n                autoFocus\r\n                />\r\n                {\r\n                selected === 'list' && (\r\n                    <select value={listType} onChange={handleChange} name=\"listType\" required>\r\n                        <option value=\"\">choose your List type</option>\r\n                        <option value=\"unordred\">unordred</option>\r\n                        <option value=\"ordered-decimal\">ordred - regular numbers</option>\r\n                        <option value=\"ordered-upper-roman\">ordered - roman numbers</option>\r\n                    </select>\r\n                )\r\n                }\r\n                {\r\n                selected === 'reminder'? null : <textarea\r\n                                                    name=\"body\"\r\n                                                    onChange={handleChange}\r\n                                                    value={body}\r\n                                                    placeholder={selected === 'list'? \"separate your list items into separate lines\":\"your note content\"}\r\n                                                    required\r\n                                                />\r\n                        \r\n                }\r\n                \r\n                {selected === 'reminder' && (\r\n                    <input \r\n                        type=\"datetime-local\" \r\n                        min={d.slice(0, d.lastIndexOf(':'))} //as the \"value\" prop of this type of input is in the form of yyyy-mm-ddThh:mm\r\n                        value={date}\r\n                        onChange={handleChange}\r\n                        name=\"date\"\r\n                        required\r\n                    />\r\n                )}\r\n                \r\n                <input type=\"submit\" value=\"Save\" /> \r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ItemForm;\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport ItemForm  from \"./subcomponents/ItemForm\";\r\nconst AddingComp =({stock, setStock})=>{\r\n\r\n    const [formsShown, setFormShown] = useState({note: false, list: false, reminder: false});\r\n    const [text, seText] = useState('Add')\r\n\r\n    const handleOptions =(ev)=>{\r\n        if (ev.target.nodeName === \"DIV\") {\r\n            const type = ev.target.textContent.toLowerCase();\r\n            setFormShown({...formsShown, [type]: true}) ;\r\n        }\r\n        seText(text === \"Add\"? 'Undo':\"Add\");\r\n        document.querySelector('.options').classList.toggle('show');     \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <aside onClick={handleOptions} style={text === 'Add'? {}:{backgroundColor:\"#99001c\"}}>\r\n                {text}\r\n                <div className='options'>\r\n                    <div>Note</div>\r\n                    <div>List</div>\r\n                    <div>Reminder</div>\r\n                </div>\r\n            </aside>\r\n\r\n            { \r\n            Object.values(formsShown).includes(true) &&\r\n            <ItemForm \r\n                forms={formsShown} \r\n                reset={setFormShown}\r\n                stock={stock}\r\n                setStock={setStock}\r\n            />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddingComp;\r\n","import alertSFX from '../media/reminderSFX.mp3';\r\nimport { useState } from 'react';\r\nimport NoteCard from './subcomponents/NoteCard';\r\nimport ListCard from './subcomponents/ListCard';\r\nimport RemindCard from './subcomponents/RemindCard';\r\nimport AddingComp from './AddingComp';\r\n\r\nconst WorkArea = ({data})=>{\r\n    const [notes, updateNotes] = useState(data.notes);\r\n    const [lists, updateLists] = useState(data.lists);\r\n    const [reminders, updateReminders] = useState(data.reminders);\r\n\r\n    document.addEventListener(\"visibilitychange\", (ev)=>{\r\n        const dataStr = JSON.stringify({notes, lists, reminders});\r\n        localStorage.setItem('data', dataStr);\r\n    })\r\n    \r\n    const playAlert =()=>{\r\n        const alertSFX = document.getElementById('alertSFX');\r\n        alertSFX.volume = 0.3;\r\n        return alertSFX.play();\r\n    }\r\n    return (\r\n        <main >\r\n            <section>\r\n                <h2>NOTES <sup>editable*</sup></h2> \r\n                <div className=\"container\">\r\n                    {\r\n                    notes.map(note=> <NoteCard key={note.id} note={note} notes={notes} updateNotes={updateNotes}/>)\r\n                    }\r\n                </div>\r\n            </section>\r\n            <hr />\r\n            <section>\r\n                <h2>LISTS</h2>\r\n                <div className=\"container\">\r\n                    {\r\n                    lists.map(list=> <ListCard key={list.id} list={list} lists={lists} updateLists={updateLists}/>)\r\n                    }\r\n                </div>\r\n            </section>\r\n            <hr />\r\n            <section>\r\n                <h2>Reminders <sup>automatically arranged*</sup></h2>\r\n                <div className=\"container\">\r\n                    {\r\n                    reminders.map(reminder=>  <RemindCard key={reminder.id} reminder={reminder} \r\n                                   reminders={reminders} updateReminders={updateReminders} playAlert={playAlert}/>) \r\n                    }\r\n                </div>\r\n            </section>\r\n\r\n            <AddingComp \r\n                setStock={{updateLists, updateNotes, updateReminders}}\r\n                stock={{notes, lists, reminders}}\r\n            />\r\n\r\n            <audio id=\"alertSFX\">\r\n                <source src={alertSFX} type=\"audio/mpeg\" />\r\n            </audio>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default WorkArea;\r\n"],"sourceRoot":""}