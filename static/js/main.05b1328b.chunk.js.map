{"version":3,"sources":["media/ph.png","media/intro.mp3","media/the_loop.mp3","components/myHeader.js","media/reminderSFX.mp3","components/subcomponents/NoteCard.js","components/subcomponents/ListCard.js","components/subcomponents/RemindCard.js","components/subcomponents/ItemForm.js","components/AddingComp.js","components/WorkArea.js","components/AliFooter.js","App.js","reportWebVitals.js","index.js"],"names":["MyHeader","useState","name","setName","className","src","photo","alt","onClick","ev","document","getElementById","play","backMusic","volume","setTimeout","target","style","animation","id","introMusic","type","loop","NoteCard","note","notes","updateNotes","handleEdit","changedProp","newValue","textContent","trim","map","obj","contentEditable","onBlur","suppressContentEditableWarning","title","content","parentElement","filter","React","memo","ListCard","list","lists","updateLists","listType","slice","search","handleCheck","card","item","value","isChecked","checkedStyle","color","textDecoration","ind","checked","onChange","listStyleType","RemindCard","reminder","reminders","updateReminders","playAlert","then","alert","Date","date","getTime","now","replace","ItemForm","forms","reset","setStock","stock","setTitle","setListType","body","setBody","setDate","selected","d","getTimezoneOffset","toISOString","key","handleChange","console","log","onSubmit","preventDefault","categ","split","line","Math","floor","arr","push","sort","obj1","obj2","maxLength","placeholder","required","autoFocus","min","lastIndexOf","AddingComp","formsShown","setFormShown","text","seText","Fragment","nodeName","toLowerCase","querySelector","classList","toggle","Object","values","includes","WorkArea","data","window","addEventListener","dataStr","JSON","stringify","localStorage","setItem","alertSFX","AliFooter","href","rel","App","getItem","parse","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.05b1328b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ph.93572040.png\";","export default __webpack_public_path__ + \"static/media/intro.44cb6585.mp3\";","export default __webpack_public_path__ + \"static/media/the_loop.dd76c723.mp3\";","import { useState } from 'react';\r\nimport photo from '../media/ph.png'\r\nimport introMusic from '../media/intro.mp3'\r\nimport backMusic from '../media/the_loop.mp3'\r\n\r\nconst MyHeader =()=>{\r\n    const [name, setName] = useState('');\r\n\r\n    const handleClick =(ev)=>{\r\n        document.getElementById('introMusic').play();\r\n        const backMusic = document.getElementById('backMusic');\r\n        backMusic.volume = 0.5;\r\n\r\n        setTimeout(()=> backMusic.play(), 7500);\r\n        ev.target.style.animation = 'fadeOutLeft 3s'\r\n        setTimeout(()=> setName('retract'), 2800);\r\n    }\r\n    return (\r\n        <header className={name}>\r\n            <img src={photo} alt=\"productive\"/>\r\n            <div> \r\n                <h1>Productive</h1>\r\n                <p>your life managment app</p>\r\n                {name? null: <span onClick={handleClick} > Let's Go! </span>}\r\n            </div>\r\n            <audio id=\"introMusic\">\r\n                <source src={introMusic} type=\"audio/mpeg\" />\r\n            </audio>\r\n            <audio id=\"backMusic\" loop>\r\n                <source src={backMusic} type=\"audio/mpeg\" />\r\n            </audio>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default MyHeader;","export default __webpack_public_path__ + \"static/media/reminderSFX.c5d0d3e2.mp3\";","import React from 'react';\r\n\r\nconst NoteCard =({ note, notes, updateNotes})=>{\r\n\r\n    const handleDelete =(ev)=> {\r\n        ev.target.parentElement.style.animation = 'fadeOutLeft 1s';\r\n        setTimeout(()=> updateNotes( notes.filter(obj=> obj !== note)), 600);\r\n    }\r\n\r\n    const handleEdit =(ev)=> {\r\n        const changedProp = ev.target.className;\r\n        const newValue = ev.target.textContent.trim();\r\n\r\n        updateNotes(notes.map(obj=> obj !== note? obj: {...obj, [changedProp]: newValue}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\" >\r\n            <h2 className='title' contentEditable onBlur={handleEdit} suppressContentEditableWarning >{note.title}</h2>\r\n            <hr/>\r\n            <p contentEditable onBlur={handleEdit} className=\"content\" suppressContentEditableWarning> {note.content} </p>\r\n            <br />\r\n            <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo(NoteCard);","import React from 'react';\r\n\r\nconst ListCard =({ list, lists, updateLists})=>{\r\n    const listType = list.listType.slice( list.listType.search('-') + 1 );\r\n\r\n    const handleDelete =(ev)=> {\r\n        ev.target.parentElement.style.animation = 'fadeOutLeft 1s';\r\n        setTimeout(()=> updateLists(lists.filter(card=> card !== list)), 600);\r\n    }\r\n    \r\n    const handleCheck =(ev)=> {\r\n        updateLists( lists.map(card=> { \r\n                            if(card !== list){ //i.e: the other lists\r\n                                return card //unchanged\r\n                            }\r\n                            const content = card.content.map(obj=> { // representing the single item (line)\r\n                                if (obj.item === ev.target.value || obj.item === ev.target.textContent){ // clicking on the label or the input el.\r\n                                    return {item: obj.item, isChecked: !obj.isChecked}\r\n                                }else {\r\n                                    return obj\r\n                                }\r\n                            })\r\n                            return {...card, content}\r\n                        }\r\n                    )\r\n                )\r\n    }\r\n\r\n\r\n    const checkedStyle = {color: '#e0e0de', textDecoration: 'line-through'};\r\n\r\n    return (\r\n        <div className=\"listCard\" >\r\n            <h2 className=\"title\" >{list.title}</h2>\r\n            <hr/>\r\n            {\r\n                list.listType === 'unordred'? \r\n                <ul>\r\n                    {\r\n                    list.content.map((obj, ind)=> { \r\n                        return <li  key={list.id + ind} > \r\n                                    <label style={obj.isChecked? checkedStyle: {}}>\r\n                                        <input type='checkbox' \r\n                                        checked={obj.isChecked} \r\n                                        onChange={handleCheck} \r\n                                        value={obj.item}\r\n                                        />{obj.item}\r\n                                    </label> \r\n                               </li>\r\n                    })\r\n                    }\r\n                </ul>:\r\n                <ol style={{ listStyleType: listType}} >\r\n                    {list.content.map((obj, ind)=> <li key={list.id + ind}> {obj.item} </li>)}\r\n                </ol>\r\n            }\r\n            <br />\r\n            <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo(ListCard);\r\n","import React from 'react';\r\n\r\nconst RemindCard =({reminder, reminders, updateReminders, playAlert})=>{\r\n    \r\n    const handleDelete =(ev)=> {\r\n        ev.target.parentElement.style.animation = 'fadeOutLeft 1s';\r\n        setTimeout(()=> updateReminders(reminders.filter(obj=> obj !== reminder)), 600);\r\n    }\r\n\r\n    setTimeout(()=>{\r\n        playAlert().then(()=> alert(\"it's time for \" + reminder.title));\r\n    }, (new Date(reminder.date).getTime() - Date.now()))\r\n\r\n\r\n    return (\r\n        <div className=\"reminder\" >\r\n            <h2 className=\"title\" >{reminder.title}</h2>\r\n            <hr/>\r\n            <p>to be done at {reminder.date.replace(\"T\", \" > \")}</p>\r\n\r\n            <br />\r\n            <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo(RemindCard);\r\n\r\n","import { useState } from \"react\";\r\n\r\nconst ItemForm =({forms, reset, setStock, stock})=>{\r\n    const [title, setTitle] = useState('');\r\n    const [listType, setListType] = useState('');\r\n    const [body, setBody] = useState(``);\r\n    const [date, setDate] = useState('');\r\n\r\n    let selected = null;\r\n    let d = new Date(Date.now() -  (new Date()).getTimezoneOffset() * 60 * 1000).toISOString(); // will be used very down in the date input/ toIso reset to the TZ to 0\r\n\r\n    for (let key in forms) if (forms[key]) selected = key;\r\n\r\n\r\n    const handleChange =(ev)=>{\r\n        switch(ev.target.name){\r\n            case 'title': setTitle(ev.target.value);\r\n                break;\r\n            case 'listType': setListType(ev.target.value);\r\n                break;\r\n            case 'body': setBody(ev.target.value);\r\n                break;\r\n            case 'date': setDate(ev.target.value);\r\n                break;\r\n            default: console.log('non applicable')\r\n\r\n        }\r\n    }\r\n\r\n    const handleSave =(ev)=>{\r\n        ev.preventDefault();\r\n        const categ = selected;\r\n\r\n        const content = categ !== 'list'? body: body.trim().split('\\n').map(line=> {return {item:line, isChecked:false}});\r\n\r\n        const obj = {title, listType, content, date ,id: categ + Math.floor(Date.now() / 5000)}\r\n        const arr = [...stock[categ+'s']];\r\n        arr.push(obj)\r\n\r\n        switch(categ){\r\n            case 'note': setStock.updateNotes(arr);\r\n                break;\r\n            case 'list': setStock.updateLists(arr);\r\n                break;\r\n            case 'reminder': \r\n                setStock.updateReminders(arr.sort((obj1, obj2)=> new Date(obj1.date) - new Date(obj2.date))) // to display the sooner to the left);\r\n                break;\r\n            default: console.log('not added')\r\n        }\r\n\r\n        setTitle(''); setListType(''); setBody('');\r\n\r\n        reset({...forms, [selected]:false});\r\n    }\r\n\r\n    return (\r\n        <div className=\"item-form\">\r\n\r\n            <span \r\n                onClick={()=> { setTitle(''); setListType(''); setBody(''); reset({...forms, [selected]:false});}}\r\n                className=\"exit\"\r\n            >\r\n                    X\r\n            </span>\r\n\r\n            <form onSubmit={handleSave}>\r\n\r\n                <input \r\n                name=\"title\"\r\n                maxLength=\"30\" \r\n                placeholder=\"set a title\" \r\n                value={title} \r\n                onChange={handleChange}\r\n                required\r\n                autoFocus\r\n                />\r\n                {\r\n                selected === 'list' && (\r\n                    <select value={listType} onChange={handleChange} name=\"listType\" required>\r\n                        <option value=\"\">choose your List type</option>\r\n                        <option value=\"unordred\">unordred</option>\r\n                        <option value=\"ordered-decimal\">ordred - regular numbers</option>\r\n                        <option value=\"ordered-upper-roman\">ordered - roman numbers</option>\r\n                    </select>\r\n                )\r\n                }\r\n                {\r\n                selected === 'reminder'? null : <textarea\r\n                                                    name=\"body\"\r\n                                                    onChange={handleChange}\r\n                                                    value={body}\r\n                                                    placeholder={selected === 'list'? \"separate your list items into separate lines\":\"your note content\"}\r\n                                                    required\r\n                                                />\r\n                        \r\n                }\r\n                \r\n                {selected === 'reminder' && (\r\n                    <input \r\n                        type=\"datetime-local\" \r\n                        min={d.slice(0, d.lastIndexOf(':'))} //as the \"value\" prop of this type of input is in the form of yyyy-mm-ddThh:mm\r\n                        value={date}\r\n                        onChange={handleChange}\r\n                        name=\"date\"\r\n                        required\r\n                    />\r\n                )}\r\n                \r\n                <input type=\"submit\" value=\"Save\" /> \r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ItemForm;\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport ItemForm  from \"./subcomponents/ItemForm\";\r\nconst AddingComp =({stock, setStock})=>{\r\n\r\n    const [formsShown, setFormShown] = useState({note: false, list: false, reminder: false});\r\n    const [text, seText] = useState('Add')\r\n\r\n    const handleOptions =(ev)=>{\r\n        if (ev.target.nodeName === \"DIV\") {\r\n            const type = ev.target.textContent.toLowerCase();\r\n            setFormShown({...formsShown, [type]: true}) ;\r\n        }\r\n        seText(text === \"Add\"? 'Undo':\"Add\");\r\n        document.querySelector('.options').classList.toggle('show');     \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <aside onClick={handleOptions} >\r\n                {text}\r\n                <div className='options'>\r\n                    <div>Note</div>\r\n                    <div>List</div>\r\n                    <div>Reminder</div>\r\n                </div>\r\n            </aside>\r\n\r\n            { \r\n            Object.values(formsShown).includes(true) &&\r\n            <ItemForm \r\n                forms={formsShown} \r\n                reset={setFormShown}\r\n                stock={stock}\r\n                setStock={setStock}\r\n            />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddingComp;\r\n","import alertSFX from '../media/reminderSFX.mp3';\r\nimport { useState } from 'react';\r\nimport NoteCard from './subcomponents/NoteCard';\r\nimport ListCard from './subcomponents/ListCard';\r\nimport RemindCard from './subcomponents/RemindCard';\r\nimport AddingComp from './AddingComp';\r\n\r\nconst WorkArea = ({data})=>{\r\n    const [notes, updateNotes] = useState(data.notes);\r\n    const [lists, updateLists] = useState(data.lists);\r\n    const [reminders, updateReminders] = useState(data.reminders);\r\n\r\n    window.addEventListener('beforeunload', (ev)=>{\r\n        const dataStr = JSON.stringify({notes, lists, reminders});\r\n        localStorage.setItem('data', dataStr);\r\n    })\r\n    \r\n    const playAlert =()=>{\r\n        const alertSFX = document.getElementById('alertSFX');\r\n        alertSFX.volume = 0.2;\r\n        return alertSFX.play();\r\n    }\r\n    return (\r\n        <main >\r\n            <section>\r\n                <h2>NOTES <sup>editable*</sup></h2> \r\n                <div className=\"container\">\r\n                    {\r\n                    notes.map(note=> <NoteCard key={note.id} note={note} notes={notes} updateNotes={updateNotes}/>)\r\n                    }\r\n                </div>\r\n            </section>\r\n            <hr />\r\n            <section>\r\n                <h2>LISTS</h2>\r\n                <div className=\"container\">\r\n                    {\r\n                    lists.map(list=> <ListCard key={list.id} list={list} lists={lists} updateLists={updateLists}/>)\r\n                    }\r\n                </div>\r\n            </section>\r\n            <hr />\r\n            <section>\r\n                <h2>Reminders <sup>automatically arranged*</sup></h2>\r\n                <div className=\"container\">\r\n                    {\r\n                    reminders.map(reminder=>  <RemindCard key={reminder.id} reminder={reminder} \r\n                                   reminders={reminders} updateReminders={updateReminders} playAlert={playAlert}/>) \r\n                    }\r\n                </div>\r\n            </section>\r\n\r\n            <AddingComp \r\n                setStock={{updateLists, updateNotes, updateReminders}}\r\n                stock={{notes, lists, reminders}}\r\n            />\r\n\r\n            <audio id=\"alertSFX\">\r\n                <source src={alertSFX} type=\"audio/mpeg\" />\r\n            </audio>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default WorkArea;\r\n","const AliFooter =()=> {\r\n    return <footer>\r\n        <a \r\n        href='https://www.linkedin.com/in/ali-khaled-130013/' \r\n        target=\"_blank\"\r\n        rel='noreferrer'\r\n        >Website App Developer</a>\r\n        </footer>\r\n}\r\n\r\nexport default AliFooter;","import React from 'react';\r\n\r\nimport MyHeader from './components/myHeader'\r\nimport WorkArea from './components/WorkArea'\r\nimport AliFooter from './components/AliFooter'\r\n\r\n\r\nfunction App(){\r\n    \r\n    if (!localStorage.getItem(\"data\")){\r\n        localStorage.setItem('data', JSON.stringify({notes: [], lists: [], reminders: []}));\r\n    }\r\n    const data = JSON.parse(localStorage.getItem('data'));\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <MyHeader />\r\n            <WorkArea data={data}/>\r\n            <AliFooter />\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}